{"version":3,"file":"static/js/627.719c2583.chunk.js","mappings":"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","sources":["pages/Details/MovieDetails.styled.jsx","pages/Details/MovieDetails.jsx","components/Buttons/Buttons.jsx","pages/Home/Home.jsx","pages/Home/Home.styled.jsx","pages/Movies/Movies.styled.jsx","services/api.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import styled from 'styled-components';\nimport propTypes from 'prop-types';\n\nexport const Wrapper = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 0 20px 20px 20px;\n  &::before {\n    content: '';\n    display: block;\n    background-color: rgb(255 255 255);\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: -1;\n  }\n  &::after {\n    content: '';\n    position: fixed;\n    top: 0px;\n    left: -5px;\n    width: calc(100% + 10px);\n    height: calc(100vh + 10px);\n\n    background-image: ${props =>\n      props.backdrop\n        ? `url('https://image.tmdb.org/t/p/w500/${props.backdrop}')`\n        : 'none'};\n    background-size: cover;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-attachment: fixed;\n    filter: blur(5px);\n    z-index: -1;\n    opacity: 0.35;\n  }\n`;\n\nexport const Card = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  width: 100%;\n  height: 100%;\n  margin-top: 25px;\n`;\n\nexport const Image = styled.img`\n  border-radius: 10px;\n  box-shadow: 0 0 15px rgba(0, 0, 0, 0.5);\n  align-self: flex-start;\n  height: 450px;\n  max-width: 300px;\n`;\n\nexport const InfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-self: flex-start;\n  padding: 0px 20px 10px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 2rem;\n  font-weight: 700;\n`;\nexport const Score = styled.p`\n  font-size: 1.5rem;\n  font-weight: 500;\n  margin-top: 15px;\n  display: flex;\n`;\n\nexport const SubTitle = styled.h3`\n  margin-top: 15px;\n  font-size: 1.5rem;\n  font-weight: 500;\n`;\n\nexport const Overview = styled.span`\n  font-size: 1rem;\n  font-weight: 400;\n  text-align: justify;\n`;\n\nexport const Genres = styled.ul`\n  display: flex;\n  flex-direction: row;\n`;\nexport const Genre = styled.li`\n  font-size: 1rem;\n  font-weight: 400;\n  margin-right: 5px;\n  &:last-child {\n    margin: 0;\n  }\n`;\n\nexport const ButtonsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: flex-start;\n  list-style: none;\n  margin: 10px 0;\n`;\nexport const Item = styled.li`\n  margin: 15px 20px 15px 0;\n`;\n\nWrapper.propTypes = {\n  backdrop: propTypes.string,\n};\n","import { useRef, useState, useEffect } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { getMovieDetails } from 'services/api';\nimport { Suspense } from 'react';\nimport {\n  Card,\n  Image,\n  InfoContainer,\n  Score,\n  Title,\n  Wrapper,\n  SubTitle,\n  Overview,\n  Genres,\n  Genre,\n  ButtonsList,\n  Item,\n} from './MovieDetails.styled';\nimport { Button } from '../Movies/Movies.styled';\nimport NoPoster from 'images/no-image-main.png';\nimport { imgUrl } from '../Home/Home';\nimport Loader from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  const { movieId } = useParams();\n  const [details, setDetails] = useState(null);\n\n  useEffect(() => {\n    const fetchDetails = async () => {\n      try {\n        const response = await getMovieDetails(movieId);\n        setDetails(response);\n      } catch (error) {\n        console.log({ error });\n      }\n    };\n\n    fetchDetails();\n  }, [movieId]);\n\n  return (\n    <>\n      {!details ? (\n        <p\n          style={{\n            fontSize: 24,\n            fontWeight: 700,\n          }}\n        >\n          Movie isn't found\n        </p>\n      ) : (\n        <Wrapper backdrop={details.backdrop_path}>\n          <Link to={backLinkLocationRef.current}>\n            <Button>&#8249; Go back</Button>\n          </Link>\n          <Card>\n            <Image\n              src={\n                details.poster_path ? imgUrl + details.poster_path : NoPoster\n              }\n              alt={details.title}\n            />\n            <InfoContainer>\n              <Title>\n                {details.title} ({details.release_date.slice(0, 4)})\n              </Title>\n              <Score>\n                User Score: {`${details.vote_average * 10}`.slice(0, 2)}%\n              </Score>\n              <SubTitle>Overview</SubTitle>\n              <Overview>{details.overview}</Overview>\n              <SubTitle>Genres</SubTitle>\n              <Genres>\n                {details.genres.map(({ id, name }) => (\n                  <Genre key={id}>{name}</Genre>\n                ))}\n              </Genres>\n            </InfoContainer>\n          </Card>\n\n          <ButtonsList>\n            <Item>\n              <Link to=\"cast\" state={{ id: movieId }}>\n                <Button>Cast</Button>\n              </Link>\n            </Item>\n            <Item>\n              <Link to=\"reviews\" state={{ id: movieId }}>\n                <Button>Reviews</Button>\n              </Link>\n            </Item>\n          </ButtonsList>\n\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </Wrapper>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import { Button } from '../../pages/Movies/Movies.styled';\nimport propTypes from 'prop-types';\n\nexport const Buttons = ({ page, totalPages, handlePageChange }) => {\n  if (totalPages === 1) {\n    return null;\n  }\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'flex-start',\n        margin: 10,\n        alignItems: 'space-between',\n      }}\n    >\n      <Button\n        style={{\n          marginRight: 10,\n        }}\n        disabled={page === 1}\n        onClick={() => handlePageChange(page - 1)}\n      >\n        &#8249; Previous\n      </Button>\n      <Button\n        disabled={page === totalPages}\n        onClick={() => handlePageChange(page + 1)}\n      >\n        Next &#8250;\n      </Button>\n    </div>\n  );\n};\n\nButtons.propTypes = {\n  page: propTypes.number,\n  totalPages: propTypes.number,\n  handlePageChange: propTypes.func,\n};\n","import { useEffect, useState, useCallback } from 'react';\nimport { fetchTrendingMovies } from 'services/api';\nimport {\n  Container,\n  Card,\n  Img,\n  TextContainer,\n  Link,\n  Text,\n  List,\n  Header,\n} from './Home.styled';\nimport { Buttons } from 'components/Buttons/Buttons';\nimport NoPoster from 'images/no-image-main.png';\n\nexport const imgUrl = 'https://image.tmdb.org/t/p/w500';\n\nconst Home = () => {\n  const [trending, setTrending] = useState([]);\n  const [page, setPage] = useState(1);\n\n  const handlePageChange = useCallback(\n    page => {\n      setPage(page);\n    },\n    [setPage]\n  );\n\n  useEffect(() => {\n    const fetchTrending = async () => {\n      try {\n        const { results } = await fetchTrendingMovies(page);\n        setTrending(results);\n      } catch (error) {\n        console.log({ error });\n      }\n    };\n\n    fetchTrending();\n  }, [page]);\n\n  return (\n    <main>\n      <Header>Trending Today</Header>\n      <Container>\n        <List>\n          {trending.map(({ title, id, poster_path }) => (\n            <Card key={id}>\n              <Link to={`movies/${id}`}>\n                <Img\n                  src={poster_path ? imgUrl + poster_path : NoPoster}\n                  alt={title}\n                />\n                <TextContainer>\n                  <Text>{title}</Text>\n                </TextContainer>\n              </Link>\n            </Card>\n          ))}\n        </List>\n        <Buttons\n          page={page}\n          totalPages={trending.total_pages}\n          handlePageChange={handlePageChange}\n        />\n      </Container>\n    </main>\n  );\n};\n\nexport default Home;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 100%;\n  margin-left: auto;\n  margin-right: auto;\n  justify-content: center;\n`;\n\nexport const Card = styled.li`\n  background: rgb(255, 255, 255);\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 6px 18px;\n  width: 100%;\n  max-width: 200px;\n  margin: 0.5em;\n  border-radius: 10px;\n  display: inline-block;\n  text-decoration: none;\n  color: black;\n  &:hover {\n    cursor: pointer;\n    transform: scale(1.05);\n    box-shadow: 0 10px 25px rgb(0 0 0 / 8%);\n  }\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n`;\n\nexport const Img = styled.img`\n  padding: 0px;\n  margin: 0px;\n  height: 260px;\n  width: 100%;\n  display: block;\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n`;\n\nexport const TextContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  padding: 10px;\n  margin: 0px;\n  text-decoration: none;\n`;\n\nexport const Text = styled.p`\n  font-size: 10px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 100%;\n  justify-content: center;\n`;\n\nexport const Header = styled.h1`\n  color: orangered;\n  margin: 1rem 0px;\n  display: block;\n`;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.form`\n  margin-bottom: 16px;\n`;\n\nexport const Header = styled.h1`\n  color: orangered;\n  margin: 1rem 0px;\n  display: block;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 10px;\n  border: orangered 1px solid;\n  font: inherit;\n  margin-right: 10px;\n`;\n\nexport const Button = styled.button`\n  padding: 8px 16px;\n  border-radius: 8px;\n  border: none;\n  text-decoration: none;\n  color: white;\n  font-weight: 500;\n  cursor: pointer;\n  background-color: black;\n\n  &:hover {\n    color: white;\n    background-color: orangered;\n  }\n\n  &:disabled {\n    /* color: gray; */\n    background-color: gray;\n    cursor: not-allowed;\n  }\n`;\n","import axios from 'axios';\n\nconst API_KEY = '917494deecf020090f46312c9c574dbd';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async page => {\n  try {\n    const queryStr = `trending/movie/day?api_key=${API_KEY}&language=en-US&page=${page}`;\n    const { data: movies } = await axios.get(queryStr);\n    return movies;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const queryStr = `search/movie?api_key=${API_KEY}&language=en-US&query=${query}`;\n    const { data: movies } = await axios.get(queryStr);\n    return movies;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const queryStr = `movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n    const { data } = await axios.get(queryStr);\n    return data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const queryStr = `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n    const { data } = await axios.get(queryStr);\n    return data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const getMovieReview = async movieId => {\n  try {\n    const queryStr = `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`;\n    const { data } = await axios.get(queryStr);\n    return data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["Wrapper","styled","props","backdrop","Card","Image","InfoContainer","Title","Score","SubTitle","Overview","Genres","Genre","ButtonsList","Item","propTypes","location","useLocation","backLinkLocationRef","useRef","state","from","movieId","useParams","useState","details","setDetails","useEffect","fetchDetails","getMovieDetails","response","console","log","error","backdrop_path","to","current","src","poster_path","imgUrl","NoPoster","alt","title","release_date","slice","vote_average","overview","genres","map","id","name","Suspense","fallback","Loader","style","fontSize","fontWeight","Buttons","page","totalPages","handlePageChange","display","justifyContent","margin","alignItems","marginRight","disabled","onClick","trending","setTrending","setPage","useCallback","fetchTrending","fetchTrendingMovies","results","total_pages","Container","Link","NavLink","Img","TextContainer","Text","List","Header","Input","Button","API_KEY","axios","queryStr","movies","data","Error","searchMovies","query","getMovieCredits","getMovieReview","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","propName","componentName","propFullName","secret","err","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes"],"sourceRoot":""}